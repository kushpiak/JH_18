#include "message_handler_libs.h"
void coder()
{

    coderVO();
    coderSTANDPOINT();
}

void decodeblock()
{

    decoderVO();
    decoderDELETE();
    decoderANTENNA();
    decoderSTANDPOINT();
}

void coderVO()
{
    unsigned char msg_out[JH18_VO_SIZE];
    jh18 obj;
    MessageVO messVO;
    messVO.time = 0x0249a172; // dec 38379890
    messVO.track_number = 1; //300 - 01 2c

    messVO.distance = 103083; //m
    messVO.bearing = 11.881714; //deg
    messVO.height = 0; //m
    messVO.speed = 189.2; //m/c
    messVO.course = 11.90; //deg
    // if manual messVO.support_mode = 1;

    // if auto or ssemiauto
    messVO.support_mode = 0;

    messVO.first_point_flag = false; // if FIRST
    messVO.delete_flag = false; // if THROW_OUT
    messVO.simulation_flag = true; // if

    messVO.friend_or_foe = 2;
    messVO.fof_flag = true;
    //----const -----
    messVO.information_type = 0x2; //! проставим константой
    messVO.radar_ID = 0xa485;
    messVO.destination_ID = 0x1940;
    messVO.information_label = 0x28;
    messVO.height_mode = 0;
    messVO.point_trace_source = 0;
    messVO.track_quality = 0xa;
    messVO.correction_flag = 0;
    messVO.class_label_flag = true;
    messVO.type_class = 1;
    messVO.quantity_flag = true;
    messVO.quantity = 1;

    int result = obj.CoderVO(messVO, msg_out, JH18_VO_SIZE);
}

void coderDELETE()
{
}

void coderANTENNA()
{
}

void coderSTANDPOINT()
{
    jh18 obj;
    unsigned char msg_out_netted[JH18_NETTED_SIZE];
    MessageNETTED messNETTED;
    messNETTED.time = 0x030576a4; // dec 38379890
    messNETTED.response = false;
    messNETTED.radar_id = 0xa480;
    messNETTED.radar_longitude = 94.4536;
    messNETTED.radar_latitude = 16.870550000000001;
    messNETTED.radar_altitude = 70;
    messNETTED.system_status = 0;
    messNETTED.channel_type = 1;
    unsigned char radar_name[] = {
        0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08,
        0x09, 0x00a, 0x0b, 0x0c, 0x0d, 0x0e, 0xf
    };
    const char* radar_name2 = { "hello world" };

    //memcpy(&messNETTED.radar_name, &radar_name, sizeof (radar_name));
    memcpy(&messNETTED.radar_name, radar_name2, 15);
    //----const -----
    messNETTED.information_type = 0x1; //! проставим константой
    messNETTED.radar_ID = 0xa480;
    messNETTED.destination_ID = 0x1940;
    messNETTED.information_label = 0x14;
    int result = obj.CoderNETTED(messNETTED, msg_out_netted, JH18_NETTED_SIZE);
}

void decoderVO()
{
    unsigned char msg[] = {
        0xff, // [0]
        0xff, // [1]
        0x1f, // [2] Len + 2
        0x20, // [3] //
        0x72, // [4] //Time
        0xa1, // [5] //TIme
        0x49, // [6] //Time
        0x02, // [7] //Time
        0x85, // [8] //Radar id
        0xa4, // [9]
        0x40, // [10]
        0x19, // [11]
        0x28, // [12]
        0x00, // [13]
        0x01, // [14] //Track id
        0x00, // [15] //Track id ?
        0xab, // [16] //range
        0x92, // [17] //range
        0x01, // [18] //range
        0x73, // [19] //azimuth
        0x08, // [20] //azimuth
        0x00, // [21]
        0x00, // [22]
        0X64, // [23] //GS
        0X07, // [24] //GS
        0Xa6, // [25] //Heading
        0X04, // [26] //Heading
        0X00, // [27]
        0Xa1, // [28] //TQ (4 bits)
        0x82, // [29]
        0x81, // [30]
        0x81, // [31]
        0xca // [32] CheckSum
    };

    unsigned char msg2[] = {
        0xff, 0xff, 0x1f, 0x20, 0xb2, 0x25, 0xd0, 0x02,
        0x37, 0x00, 0x40, 0x19, 0x28, 0x00, 0x03, 0x00,
        0xd8, 0x6f, 0x03, 0x15, 0xbc, 0x00, 0x00, 0x2e,
        0x09, 0xe5, 0x71, 0x00, 0x70, 0x00, 0x00, 0x81,
        0xc4
    };
    unsigned char msg3[] = {
        0xff, 0xff, 0x1f, 0x20, 0x94, 0x2a, 0xd0, 0x02,
        0x37, 0x00, 0x40, 0x19, 0x28, 0x00, 0x05, 0x00,
        0x6c, 0x39, 0x03, 0x91, 0xd8, 0x00, 0x00, 0x47,
        0x0a, 0x4b, 0x31, 0x00, 0xa0, 0x00, 0x00, 0x81,
        0x75
    };

    unsigned char msg4[] = {
        0xff, 0xff, 0x1f, 0x20, 0xd0, 0x52, 0xd0, 0x02,
        0x37, 0x00, 0x40, 0x19, 0x28, 0x00, 0x03, 0x00,
        0x78, 0x79, 0x03, 0x52, 0xbc, 0x00, 0x00, 0x3c,
        0x09, 0x46, 0x72, 0x00, 0x80, 0x00, 0x00, 0x81,
        0x12
    };
    unsigned char VO_pereddelete[] = {
        0xff, 0xff, 0x1f, 0x20, 0x66, 0x34, 0xd1, 0x02,
        0x37, 0x00, 0x40, 0x19, 0x28, 0x00, 0x03, 0x00,
        0xe8, 0xa9, 0x03, 0x91, 0xbd, 0x00, 0x00, 0x8d,
        0x09, 0xd7, 0x73, 0x00, 0xa0, 0x00, 0x00, 0x81,
        0xb6
    };
    unsigned char delete_msg[] = {
        0xff, 0xff, 0x29, 0x10, 0x3a, 0x6a, 0xd1, 0x02,
        0x37, 0x00, 0x40, 0x19, 0x14, 0x00, 0x37, 0x00,
        0x28, 0xb8, 0x94, 0x00, 0xaf, 0x75, 0x19, 0x00,
        0x5b, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x68
    };

    MessageVO messVO;
    jh18 obj;
    GwAO* dataVO = new GwAO();
    uint8_t lenght_high { 0 };
    memcpy((char*)&lenght_high, (char*)&msg[2], sizeof(lenght_high));

    if (lenght_high == (JH18_VO_SIZE - 2)) {
        // int result =  obj.DecoderVO(new_empty_message, msg2, JH18_VO_SIZE);
        // result =  obj.DecoderVO(new_empty_message, msg3, JH18_VO_SIZE);
        // result =  obj.DecoderVO(new_empty_message, msg4, JH18_VO_SIZE);VO_pereddelete
        //int result = obj.DecoderVO(messVO, VO_pereddelete, JH18_VO_SIZE);
        //result =  obj.DecoderVO(messVO, delete_msg, JH18_VO_SIZE);
    }
}

void decoderSTANDPOINT()
{
    unsigned char msg_netted1[] = {
        0xff, 0xff, 0x29, 0x10, 0xa4, 0x76, 0x05, 0x03,
        0x80, 0xa4, 0x40, 0x19, 0x14, 0x00, 0x80, 0xa4,
        0xf1, 0x1f, 0x90, 0x00, 0x0f, 0xbe, 0x19, 0x00,
        0x07, 0x00, 0x01,
        0x01, 0x02, 0x03, 0x04, 0x05,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x0a,
        0x62
    };
    unsigned char msg_netted2[] = {
        0xff, 0xff, 0x29, 0x10, 0x98, 0xe5, 0x61, 0x02,
        0x37, 0x00, 0x40, 0x19, 0x14, 0x00, 0x37, 0x00,
        0x28, 0xb8, 0x94, 0x00, 0xaf, 0x75, 0x19, 0x00,
        0x5b, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0xff
    };
    unsigned char msg_netted3[] = {
        0xff, 0xff, 0x29, 0x10, 0x5e, 0x10, 0x62, 0x02,
        0x37, 0x00, 0x40, 0x19, 0x14, 0x00, 0x37, 0x00,
        0x28, 0xb8, 0x94, 0x00, 0xaf, 0x75, 0x19, 0x00,
        0x5b, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x0d
    };
    unsigned char msg_netted4[] = {
        0xff, 0xff, 0x29, 0x10, 0x56, 0x3b, 0x62, 0x02,
        0x37, 0x00, 0x40, 0x19, 0x14, 0x00, 0x37, 0x00,
        0x28, 0xb8, 0x94, 0x00, 0xaf, 0x75, 0x19, 0x00,
        0x5b, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0xea
    };
    unsigned char msg_netted5[] = {
        0xff, 0xff, 0x29, 0x10, 0x1c, 0x66, 0x62, 0x02,
        0x37, 0x00, 0x40, 0x19, 0x14, 0x00, 0x37, 0x00,
        0x28, 0xb8, 0x94, 0x00, 0xaf, 0x75, 0x19, 0x00,
        0x5b, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0xf9
    };
    unsigned char msg_netted6[] = {
        0xff, 0xff, 0x29, 0x10, 0xe2, 0x90, 0x62, 0x02,
        0x37, 0x00, 0x40, 0x19, 0x14, 0x00, 0x37, 0x00,
        0x28, 0xb8, 0x94, 0x00, 0xaf, 0x75, 0x19, 0x00,
        0x5b, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x09
    };
    unsigned char msg_netted7[] = {
        0xff, 0xff, 0x29, 0x10, 0xa8, 0xbb, 0x62, 0x02,
        0x37, 0x00, 0x40, 0x19, 0x14, 0x00, 0x37, 0x00,
        0x28, 0xb8, 0x94, 0x00, 0xaf, 0x75, 0x19, 0x00,
        0x5b, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x18
    };
    unsigned char msg_netted8[] = {
        0xff, 0xff, 0x29, 0x10, 0x86, 0xdc, 0x63, 0x02,
        0x37, 0x00, 0x40, 0x19, 0x14, 0x00, 0x37, 0x00,
        0x28, 0xb8, 0x94, 0x00, 0xaf, 0x75, 0x19, 0x00,
        0x5b, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x18
    };
    unsigned char msg_netted9[] = {
        0xff, 0xff, 0x29, 0x10, 0x5e, 0x04, 0x64, 0x02,
        0x37, 0x00, 0x40, 0x19, 0x14, 0x00, 0x37, 0x00,
        0x28, 0xb8, 0x94, 0x00, 0xaf, 0x75, 0x19, 0x00,
        0x5b, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x17
    };
    unsigned char msg_netted10[] = {
        0xff, 0xff, 0x29, 0x10, 0x3c, 0x2b, 0x64, 0x02,
        0x37, 0x00, 0x40, 0x19, 0x14, 0x00, 0x37, 0x00,
        0x28, 0xb8, 0x94, 0x00, 0xaf, 0x75, 0x19, 0x00,
        0x5b, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x12
    };
    jh18 obj;
    MessageNETTED messNETTED;
    int resultNETTED = obj.DecoderNETTED(messNETTED, msg_netted1, JH18_NETTED_SIZE);
    resultNETTED = obj.DecoderNETTED(messNETTED, msg_netted2, JH18_NETTED_SIZE);
    resultNETTED = obj.DecoderNETTED(messNETTED, msg_netted3, JH18_NETTED_SIZE);
    resultNETTED = obj.DecoderNETTED(messNETTED, msg_netted4, JH18_NETTED_SIZE);
    resultNETTED = obj.DecoderNETTED(messNETTED, msg_netted5, JH18_NETTED_SIZE);
    resultNETTED = obj.DecoderNETTED(messNETTED, msg_netted6, JH18_NETTED_SIZE);
    resultNETTED = obj.DecoderNETTED(messNETTED, msg_netted7, JH18_NETTED_SIZE);
    resultNETTED = obj.DecoderNETTED(messNETTED, msg_netted8, JH18_NETTED_SIZE);
    resultNETTED = obj.DecoderNETTED(messNETTED, msg_netted9, JH18_NETTED_SIZE);
    resultNETTED = obj.DecoderNETTED(messNETTED, msg_netted10, JH18_NETTED_SIZE);
}

void decoderDELETE()
{
}

void decoderANTENNA()
{

    unsigned char msg_sector[] = {
        0xff, 0xff, 0x0f, 0x20, 0x7e, 0xe1, 0x61, 0x02,
        0x37, 0x00, 0x40, 0x19, 0x20, 0x00, 0x3a, 0x16,
        0x0f
    };
    unsigned char msg_sector1[] = {
        0xff, 0xff, 0x0f, 0x20, 0x46, 0xe2, 0x61, 0x02,
        0x37, 0x00, 0x40, 0x19, 0x20, 0x00, 0x3b, 0x16,
        0x45
    };
    unsigned char msg_sector2[] = {
        0xff, 0xff, 0x0f, 0x20, 0xdc, 0xe2, 0x61, 0x02,
        0x37, 0x00, 0x40, 0x19, 0x20, 0x00, 0x3c, 0x16,
        0xae
    };
    unsigned char msg_sector3[] = {
        0xff, 0xff, 0x0f, 0x20, 0xa4, 0xe3, 0x61, 0x02,
        0x37, 0x00, 0x40, 0x19, 0x20, 0x00, 0x3d, 0x16,
        0xe4
    };
    unsigned char msg_sector4[] = {
        0xff, 0xff, 0x0f, 0x20, 0x3a, 0xe4, 0x61, 0x02,
        0x37, 0x00, 0x40, 0x19, 0x20, 0x00, 0x3e, 0x16,
        0x4c
    };
    unsigned char msg_sector5[] = {
        0xff, 0xff, 0x0f, 0x20, 0xd0, 0xe4, 0x61, 0x02,
        0x37, 0x00, 0x40, 0x19, 0x20, 0x00, 0x3f, 0x16,
        0xb5
    };
    unsigned char msg_sector6[] = {
        0xff, 0xff, 0x0f, 0x20, 0x98, 0xe5, 0x61, 0x02,
        0x37, 0x00, 0x40, 0x19, 0x20, 0x00, 0x00, 0x16,
        0x2b
    };
    unsigned char msg_sector7[] = {
        0xff, 0xff, 0x0f, 0x20, 0x2e, 0xe6, 0x61, 0x02,
        0x37, 0x00, 0x40, 0x19, 0x20, 0x00, 0x01, 0x17,
        0x92
    };
    jh18 obj;
    MessageSECTOR messSECTOR;
    int resultSSM = obj.DecoderSECTOR(messSECTOR, msg_sector, JH18_SECTOR_SIZE);
    //resultSSM = obj.DecoderSECTOR(messSECTOR,msg_sector1,JH18_SECTOR_SIZE);
    //resultSSM = obj.DecoderSECTOR(messSECTOR,msg_sector2,JH18_SECTOR_SIZE);
    //resultSSM = obj.DecoderSECTOR(messSECTOR,msg_sector4,JH18_SECTOR_SIZE);
    //resultSSM = obj.DecoderSECTOR(messSECTOR,msg_sector5,JH18_SECTOR_SIZE);
    //resultSSM = obj.DecoderSECTOR(messSECTOR,msg_sector6,JH18_SECTOR_SIZE);
    //resultSSM = obj.DecoderSECTOR(messSECTOR,msg_sector7,JH18_SECTOR_SIZE);
}

void decodereal()
{
    unsigned char input_data_VO_SECTOR_DIS_NETTED[] {
        0xff, 0xff, 0x1f, 0x20, 0x94, 0x2a, 0xd0, 0x02,
        0x37, 0x00, 0x40, 0x19, 0x28, 0x00, 0x05, 0x00,
        0x6c, 0x39, 0x03, 0x91, 0xd8, 0x00, 0x00, 0x47,
        0x0a, 0x4b, 0x31, 0x00, 0xa0, 0x00, 0x00, 0x81,
        0x75,
        0xff, 0xff, 0x0f, 0x20, 0x3e, 0x88, 0xd2, 0x02,
        0x37, 0x00, 0x40, 0x19, 0x20, 0x00, 0x15, 0x11,
        0x61,
        0xff, 0xff, 0x1c, 0x20, 0xc2, 0x1f, 0xd0, 0x02,
        0x37, 0x00, 0x40, 0x19, 0x28, 0x00, 0x01, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x02, 0x56,
        0xff, 0xff, 0x29, 0x10, 0x12, 0xe3, 0xd0, 0x02,
        0x37, 0x00, 0x40, 0x19, 0x14, 0x00, 0x37, 0x00,
        0x28, 0xb8, 0x94, 0x00, 0xaf, 0x75, 0x19, 0x00,
        0x5b, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x18
    };
    unsigned char input_data_VO[] {
        0xff, 0xff, 0x1f, 0x20, 0x94, 0x2a, 0xd0, 0x02,
        0x37, 0x00, 0x40, 0x19, 0x28, 0x00, 0x05, 0x00,
        0x6c, 0x39, 0x03, 0x91, 0xd8, 0x00, 0x00, 0x47,
        0x0a, 0x4b, 0x31, 0x00, 0xa0, 0x00, 0x00, 0x81,
        0x75,
        0xff, 0xff, 0x1f, 0x20, 0x48, 0x39, 0xd1, 0x02,
        0x37, 0x00, 0x40, 0x19, 0x28, 0x00, 0x05, 0x00,
        0x10, 0xf2, 0x02, 0x88, 0xd8, 0x00, 0x00, 0x49,
        0x0a, 0xe4, 0x30, 0x00, 0xa0, 0x00, 0x00, 0x81,
        0xc4
    };
    unsigned char input_data_VO_single[] {
        0xff, 0xff, 0x1f, 0x20, 0x48, 0x39, 0xd1, 0x02,
        0x37, 0x00, 0x40, 0x19, 0x28, 0x00, 0x05, 0x00,
        0x10, 0xf2, 0x02, 0x88, 0xd8, 0x00, 0x00, 0x49,
        0x0a, 0xe4, 0x30, 0x00, 0xa0, 0x00, 0x00, 0x81,
        0xc4
    };

    const unsigned char* const ref_input = input_data_VO_SECTOR_DIS_NETTED;
    const unsigned char* const ref_input2 = input_data_VO;
    const unsigned char* const ref_input3 = input_data_VO_single;
    Container cont;
    jh18 obj;
    int rez = obj.decode(ref_input, 512, cont);
    //int rez = decode(ref_input2, sizeof(input_data_VO), cont);
    //int rez = obj.decode(ref_input3, sizeof(input_data_VO_single), cont);
    int rez2 = obj.decode(ref_input3, 512, cont);

    int y = 0;
}
